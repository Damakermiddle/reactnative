{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell Precision\\\\Documents\\\\ReactNativeDemo\\\\my-app\\\\src\\\\features\\\\event\\\\eventList\\\\EventListItem.jsx\";\nimport React, { Component } from 'react';\nimport { Segment, Item, Icon, List, Button } from 'semantic-ui-react';\nimport EventListAttendee from './EventListAttendee';\nimport EventDashboard from '/src/app/features/ev';\n\nclass EventListItem extends Component {\n  render() {\n    const _this$props = this.props,\n          event = _this$props.event,\n          selectEvent = _this$props.selectEvent;\n    return React.createElement(Segment.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Item.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Item.Image, {\n      size: \"tiny\",\n      circular: true,\n      src: event.hostPhotoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(Item.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Item.Header, {\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, event.title), React.createElement(Item.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Hosted by \", event.hostedBy))))), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"clock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), \" \", event.date, \" |\", React.createElement(Icon, {\n      name: \"marker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), \" \", event.venue)), React.createElement(Segment, {\n      secondary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(List, {\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, event.attendees && event.attendees.map(attendee => React.createElement(EventListAttendee, {\n      key: attendee.id,\n      attendee: attendee,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })))), React.createElement(Segment, {\n      clearing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, event.description), React.createElement(Button, {\n      onClick: () => selectEvent(event),\n      as: \"a\",\n      color: \"teal\",\n      floated: \"right\",\n      content: \"View\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default EventListItem;","map":{"version":3,"sources":["C:\\Users\\Dell Precision\\Documents\\ReactNativeDemo\\my-app\\src\\features\\event\\eventList\\EventListItem.jsx"],"names":["React","Component","Segment","Item","Icon","List","Button","EventListAttendee","EventDashboard","EventListItem","render","props","event","selectEvent","hostPhotoURL","title","hostedBy","date","venue","attendees","map","attendee","id","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCC,MAApC,QAAkD,mBAAlD;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;AAEA,MAAMC,aAAN,SAA4BR,SAA5B,CAAsC;AACpCS,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKC,KAD7B;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,WADR,eACQA,WADR;AAGP,WACE,oBAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,IAAI,EAAC,MAAjB;AAAwB,MAAA,QAAQ,MAAhC;AAAiC,MAAA,GAAG,EAAED,KAAK,CAACE,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBF,KAAK,CAACG,KAA3B,CADF,EAGE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA6BH,KAAK,CAACI,QAAnC,CAHF,CAHF,CADF,CADF,CADF,EAeE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,OACyBJ,KAAK,CAACK,IAD/B,QAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,OAE0BL,KAAK,CAACM,KAFhC,CADF,CAfF,EAsBE,oBAAC,OAAD;AAAS,MAAA,SAAS,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,UAAU,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,KAAK,CAACO,SAAN,IACCP,KAAK,CAACO,SAAN,CAAgBC,GAAhB,CAAoBC,QAAQ,IAC1B,oBAAC,iBAAD;AAAmB,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAAjC;AAAqC,MAAA,QAAQ,EAAED,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,CADF,CAtBF,EA+BE,oBAAC,OAAD;AAAS,MAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOT,KAAK,CAACW,WAAb,CADF,EAGE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAMV,WAAW,CAACD,KAAD,CAD5B;AAEE,MAAA,EAAE,EAAC,GAFL;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,OAAO,EAAC,OAJV;AAKE,MAAA,OAAO,EAAC,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CA/BF,CADF;AA6CD;;AAjDmC;;AAoDtC,eAAeH,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Segment, Item, Icon, List, Button } from 'semantic-ui-react';\r\nimport EventListAttendee from './EventListAttendee';\r\nimport EventDashboard from '/src/app/features/ev'\r\n\r\nclass EventListItem extends Component {\r\n  render() {\r\n    const { event, selectEvent } = this.props;\r\n\r\n    return (\r\n      <Segment.Group>\r\n        <Segment>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image size=\"tiny\" circular src={event.hostPhotoURL} />\r\n\r\n              <Item.Content>\r\n                <Item.Header as=\"a\">{event.title}</Item.Header>\r\n\r\n                <Item.Description>Hosted by {event.hostedBy}</Item.Description>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n\r\n        <Segment>\r\n          <span>\r\n            <Icon name=\"clock\" /> {event.date} |\r\n            <Icon name=\"marker\" /> {event.venue}\r\n          </span>\r\n        </Segment>\r\n\r\n        <Segment secondary>\r\n          <List horizontal>\r\n            {event.attendees &&\r\n              event.attendees.map(attendee => (\r\n                <EventListAttendee key={attendee.id} attendee={attendee} />\r\n              ))}\r\n          </List>\r\n        </Segment>\r\n\r\n        <Segment clearing>\r\n          <span>{event.description}</span>\r\n\r\n          <Button\r\n            onClick={() => selectEvent(event)}\r\n            as=\"a\"\r\n            color=\"teal\"\r\n            floated=\"right\"\r\n            content=\"View\"\r\n          />\r\n        </Segment>\r\n      </Segment.Group>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventListItem;\r\n"]},"metadata":{},"sourceType":"module"}