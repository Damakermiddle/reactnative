{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Dell Precision\\\\Documents\\\\ReactNativeDemo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell Precision\\\\Documents\\\\ReactNativeDemo\\\\my-app\\\\src\\\\features\\\\event\\\\EventDashboard\\\\EventDashboard.jsx\";\nimport React, { Component } from 'react';\nimport { Grid, Button } from 'semantic-ui-react';\nimport EventList from '../EventList/EventList';\nimport EventForm from '../EventForm/EventForm';\nimport cuid from 'cuid';\nconst eventsFromDashboard = [{\n  id: '1',\n  title: 'Art at FACS Mod',\n  date: '2018-03-27',\n  category: 'art',\n  description: 'Do art at FACS Mod',\n  city: 'FACS MOD',\n  venue: \"Crafting, Drawing, Designing\",\n  hostedBy: 'Bob',\n  hostPhotoURL: 'https://randomuser.me/api/portraits/men/20.jpg',\n  attendees: [{\n    id: 'a',\n    name: 'Bob',\n    photoURL: 'https://randomuser.me/api/portraits/men/20.jpg'\n  }, {\n    id: 'b',\n    name: 'Tom',\n    photoURL: 'https://randomuser.me/api/portraits/men/22.jpg'\n  }]\n}, {\n  id: '2',\n  title: 'Math tutoring at A12',\n  date: '2018-03-28',\n  category: 'teach',\n  description: 'Get tutored peer to peer at A12',\n  city: 'A12',\n  venue: 'Math 6/7, Math 8, Algreba 1',\n  hostedBy: 'Tom',\n  hostPhotoURL: 'https://randomuser.me/api/portraits/men/22.jpg',\n  attendees: [{\n    id: 'b',\n    name: 'Tom',\n    photoURL: 'https://randomuser.me/api/portraits/men/22.jpg'\n  }, {\n    id: 'a',\n    name: 'Bob',\n    photoURL: 'https://randomuser.me/api/portraits/men/20.jpg'\n  }]\n}];\n\nclass EventDashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: eventsFromDashboard,\n      isOpen: false,\n      selectedEvent: null\n    };\n\n    this.handleCreateFormOpen = () => {\n      this.setState({\n        isOpen: true,\n        selectedEvent: null\n      });\n    };\n\n    this.handleFormCancel = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.handleCreateEvent = newEvent => {\n      newEvent.id = cuid();\n      newEvent.hostPhotoURL = '/assets/user.png';\n      this.setState(({\n        events\n      }) => ({\n        events: [...events, newEvent],\n        isOpen: false\n      }));\n    };\n\n    this.handleSelectEvent = event => {\n      this.setState({\n        selectedEvent: event,\n        isOpen: true\n      });\n    };\n\n    this.handleUpdateEvent = updatedEvent => {\n      this.setState(({\n        events\n      }) => ({\n        events: events.map(event => {\n          if (event.id === updatedEvent.id) {\n            return _objectSpread({}, updatedEvent);\n          } else {\n            return event;\n          }\n        }),\n        isOpen: false,\n        selectedEvent: null\n      }));\n    };\n\n    this.handleDeleteEvent = id => {\n      this.setState(({\n        events\n      }) => ({\n        events: events.filter(e => e.id !== id)\n      }));\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          events = _this$state.events,\n          isOpen = _this$state.isOpen,\n          selectedEvent = _this$state.selectedEvent;\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(EventList, {\n      events: events,\n      selectEvent: this.handleSelectEvent,\n      deleteEvent: this.handleDeleteEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Button, {\n      positive: true,\n      content: \"Create Event\",\n      onClick: this.handleCreateFormOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), isOpen && React.createElement(EventForm, {\n      key: selectedEvent ? selectedEvent.id : 0,\n      selectedEvent: selectedEvent,\n      cancelFormOpen: this.handleFormCancel,\n      createEvent: this.handleCreateEvent,\n      updateEvent: this.handleUpdateEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default EventDashboard;","map":{"version":3,"sources":["C:\\Users\\Dell Precision\\Documents\\ReactNativeDemo\\my-app\\src\\features\\event\\EventDashboard\\EventDashboard.jsx"],"names":["React","Component","Grid","Button","EventList","EventForm","cuid","eventsFromDashboard","id","title","date","category","description","city","venue","hostedBy","hostPhotoURL","attendees","name","photoURL","EventDashboard","state","events","isOpen","selectedEvent","handleCreateFormOpen","setState","handleFormCancel","handleCreateEvent","newEvent","handleSelectEvent","event","handleUpdateEvent","updatedEvent","map","handleDeleteEvent","filter","e","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Button } from 'semantic-ui-react';\nimport EventList from '../EventList/EventList';\nimport EventForm from '../EventForm/EventForm';\nimport cuid from 'cuid';\n\nconst eventsFromDashboard = [\n  {\n    id: '1',\n    title: 'Art at FACS Mod',\n    date: '2018-03-27',\n    category: 'art',\n    description:\n      'Do art at FACS Mod',\n    city: 'FACS MOD',\n    venue: \"Crafting, Drawing, Designing\",\n    hostedBy: 'Bob',\n    hostPhotoURL: 'https://randomuser.me/api/portraits/men/20.jpg',\n    attendees: [\n      {\n        id: 'a',\n        name: 'Bob',\n        photoURL: 'https://randomuser.me/api/portraits/men/20.jpg'\n      },\n      {\n        id: 'b',\n        name: 'Tom',\n        photoURL: 'https://randomuser.me/api/portraits/men/22.jpg'\n      }\n    ]\n  },\n  {\n    id: '2',\n    title: 'Math tutoring at A12',\n    date: '2018-03-28',\n    category: 'teach',\n    description:\n      'Get tutored peer to peer at A12',\n    city: 'A12',\n    venue: 'Math 6/7, Math 8, Algreba 1',\n    hostedBy: 'Tom',\n    hostPhotoURL: 'https://randomuser.me/api/portraits/men/22.jpg',\n    attendees: [\n      {\n        id: 'b',\n        name: 'Tom',\n        photoURL: 'https://randomuser.me/api/portraits/men/22.jpg'\n      },\n      {\n        id: 'a',\n        name: 'Bob',\n        photoURL: 'https://randomuser.me/api/portraits/men/20.jpg'\n      }\n    ]\n  }\n];\n\nclass EventDashboard extends Component {\n  state = {\n    events: eventsFromDashboard,\n    isOpen: false,\n    selectedEvent: null\n  };\n\n  // handleIsOpenToggle = () => {\n  //   this.setState(({ isOpen }) => ({\n  //     isOpen: !isOpen\n  //   }));\n  // };\n\n  handleCreateFormOpen = () => {\n    this.setState({\n      isOpen: true,\n      selectedEvent: null\n    });\n  };\n\n  handleFormCancel = () => {\n    this.setState({\n      isOpen: false\n    });\n  };\n\n  handleCreateEvent = newEvent => {\n    newEvent.id = cuid();\n    newEvent.hostPhotoURL = '/assets/user.png';\n    this.setState(({ events }) => ({\n      events: [...events, newEvent],\n      isOpen: false\n    }));\n  };\n\n  handleSelectEvent = event => {\n    this.setState({\n      selectedEvent: event,\n      isOpen: true\n    });\n  };\n\n  handleUpdateEvent = updatedEvent => {\n    this.setState(({ events }) => ({\n      events: events.map(event => {\n        if (event.id === updatedEvent.id) {\n          return { ...updatedEvent };\n        } else {\n          return event;\n        }\n      }),\n      isOpen: false,\n      selectedEvent: null\n    }));\n  };\n\n  handleDeleteEvent = id => {\n    this.setState(({ events }) => ({\n      events: events.filter(e => e.id !== id)\n    }));\n  };\n\n  render() {\n    const { events, isOpen, selectedEvent } = this.state;\n    return (\n      <Grid>\n        <Grid.Column width={10}>\n          <EventList\n            events={events}\n            selectEvent={this.handleSelectEvent}\n            deleteEvent={this.handleDeleteEvent}\n          />\n        </Grid.Column>\n        <Grid.Column width={6}>\n          <Button\n            positive\n            content='Create Event'\n            onClick={this.handleCreateFormOpen}\n          />\n          {isOpen && (\n            <EventForm\n              key={selectedEvent ? selectedEvent.id : 0}\n              selectedEvent={selectedEvent}\n              cancelFormOpen={this.handleFormCancel}\n              createEvent={this.handleCreateEvent}\n              updateEvent={this.handleUpdateEvent}\n            />\n          )}\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default EventDashboard;\n"]},"metadata":{},"sourceType":"module"}